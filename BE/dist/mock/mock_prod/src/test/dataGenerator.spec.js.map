{"version":3,"file":"dataGenerator.spec.js","sourceRoot":"","sources":["../../../../../mock/mock_prod/src/test/dataGenerator.spec.ts"],"names":[],"mappings":";;AAEA,4FAAyF;AACzF,kEAAkE;AAGlE,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,qBAAqB;IAErB,EAAE,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE,EAAE;QAC3B,MAAM,MAAM,GAAG,IAAI,6BAAa,CAAC,oCAAkB,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,WAAW,CAAC;QAClF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,qBAAqB;QACrB,IAAI,EAAE,CAAC;QACP,IAAI;IACN,CAAC,CAAC,CAAC;IAGH,mCAAmC;IACnC,8CAA8C;IAC9C,mBAAmB;IACnB,qCAAqC;IACrC,QAAQ;IACR,aAAa;IACb,kBAAkB;IAClB,QAAQ;IACR,QAAQ;IACR,KAAK;IAGL,0CAA0C;IAC1C,uBAAuB;IACvB,oBAAoB;IACpB,cAAc;IACd,mDAAmD;IACnD,eAAe;IACf,qBAAqB;IACrB,0DAA0D;IAC1D,8BAA8B;IAC9B,sBAAsB;IACtB,gBAAgB;IAChB,MAAM;AAER,CAAC,CAAC,CAAC","sourcesContent":["import { expect } from 'chai';\r\nimport { retryPromise } from '../../../../shared/src/modules/utils/utils';\r\nimport { ConfigHandler } from '../../../../shared/src/modules/configSetup/configHandler';\r\nimport { configFileLocation } from '../../config/config.filePath';\r\n\r\n\r\ndescribe('retryPromiseTest', () => {\r\n  // let delay = false;\r\n\r\n  it('create config', (done) => {\r\n    const config = new ConfigHandler(configFileLocation, 'config_', true).finalConfig;\r\n    console.log(config);\r\n    // if (this.config) {\r\n    done();\r\n    // }\r\n  });\r\n\r\n\r\n  // const resolvingPromise = () => {\r\n  //   return new Promise((resolve, reject) => {\r\n  //     if (delay) {\r\n  //       resolve('promise resolved');\r\n  //     }\r\n  //     else {\r\n  //       reject();\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n\r\n  // it('should return promise', (done) => {\r\n  //   setTimeout(() => {\r\n  //     delay = true;\r\n  //   }, 1000);\r\n  //   retryPromise(resolvingPromise.bind(this), 500)\r\n  //       .then(\r\n  //           (s) => {\r\n  //             console.log('success creating connection');\r\n  //             console.log(s);\r\n  //             done();\r\n  //           });\r\n  // });\r\n\r\n});\r\n"]}