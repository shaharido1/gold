{"version":3,"file":"routesFunction.js","sourceRoot":"","sources":["../../../../mission/src/routes/routesFunction.ts"],"names":[],"mappings":";;AAAA,mCAAgC;AAChC,iEAA8D;AAC9D,uEAAoE;AACpE,uEAA6D;AAC7D,MAAM,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAE5C,MAAM,cAAc,GAAG,IAAI,+BAAc,CAAC,wBAAO,EAAE,UAAU,CAAC,CAAC;AAC/D,MAAM,oBAAoB,GAAG,IAAI,2CAAoB,CAAC,cAAc,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;AAE7F,gBAAuB,GAAG;IAExB,GAAG,CAAC,GAAG,CAAC,aAAK,CAAC,IAAI,EAAG,CAAC,GAAG,EAAE,GAAG,EAAG,EAAE,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IACzE,GAAG,CAAC,IAAI,CAAC,aAAK,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAG,EAAE,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IACtF,GAAG,CAAC,GAAG,CAAC,aAAK,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAClF,GAAG,CAAC,GAAG,CAAC,aAAK,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAC5E,GAAG,CAAC,GAAG,CAAC,aAAK,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAClF,GAAG,CAAC,GAAG,CAAC,aAAK,CAAC,kBAAkB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,oBAAoB,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAC5F,GAAG,CAAC,GAAG,CAAC,aAAK,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAIpF,CAAC;AAZD,wBAYC","sourcesContent":["import { paths } from \"./paths\";\r\nimport { MissionRoutesManager } from \"./missionRoutesManager\";\r\nimport { MissionMethods } from \"../dbModule/methods/mission.method\";\r\nimport { Mission } from \"../dbModule/schemas/mission.schema\";\r\nconst { logService } = require(\"../server\");\r\n\r\nconst missionMethods = new MissionMethods(Mission, logService);\r\nconst missionRoutesManager = new MissionRoutesManager(missionMethods, \"mission\", logService);\r\n\r\nexport function routes(app) {\r\n\r\n  app.get(paths.test,  (req, res ) => missionRoutesManager.test(req, res));\r\n  app.post(paths.getMissionById, (req, res ) => missionRoutesManager.getById(req, res));\r\n  app.get(paths.getAllMission, (req, res) => missionRoutesManager.getAll(req, res));\r\n  app.get(paths.addMission, (req, res) => missionRoutesManager.add(req, res));\r\n  app.get(paths.updateMission, (req, res) => missionRoutesManager.update(req, res));\r\n  app.get(paths.updateMissionField, (req, res) => missionRoutesManager.updateField(req, res));\r\n  app.get(paths.removeMission, (req, res) => missionRoutesManager.remove(req, res));\r\n\r\n\r\n\r\n}\r\n"]}