{"version":3,"file":"mission.method.test.js","sourceRoot":"","sources":["../../../../mission/src/test/mission.method.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { MissionMethods } from \"../dbModule/methods/mission.method\";\r\nimport { Mission } from \"../dbModule/schemas/mission.schema\";\r\nimport { DBManager } from \"../dbModule/connect\";\r\nimport { DBTestConfig } from \"./config/config\";\r\n\r\n\r\ndescribe(\"publisher DB methods\", () => {\r\n  let missionMethod;\r\n  const missionToAdd = {\r\n    name: \"test1\"\r\n  };\r\n\r\n  beforeAll(async (done) => {\r\n    await DBManager.connect(DBTestConfig.url);\r\n    const initMission = await Mission.init();\r\n    missionMethod = new MissionMethods(initMission);\r\n    done();\r\n  });\r\n\r\n  afterAll((done) => {\r\n    DBManager.disconnect(done);\r\n  });\r\n\r\n\r\n  it(\"should add mission to db\", () => {\r\n    expect.assertions(2);\r\n    return missionMethod.add(missionToAdd).then(mission => {\r\n      expect(mission).toBeDefined();\r\n      if (mission) {\r\n        expect(mission._id).toBeDefined();\r\n      }\r\n    }).catch((err) => console.log(err));\r\n  });\r\n\r\n  it(\"should get mission from db\", async () => {\r\n    expect.assertions(3);\r\n    const missionAdded = await missionMethod.add(missionToAdd);\r\n    expect(missionAdded._id).toBeDefined();\r\n    return missionMethod.get(missionAdded._id).then(mission => {\r\n      expect(mission).toBeDefined();\r\n      if (mission) {\r\n        expect(mission._id).toBeDefined();\r\n      }\r\n    }).catch((err) => console.log(err));\r\n  });\r\n\r\n  it(\"should get all mission from db\", () => {\r\n    expect.assertions(2);\r\n    return missionMethod.getAll().then(missions => {\r\n      expect(missions).toBeDefined();\r\n      if (missions) {\r\n        expect(missions.length).toBeDefined();\r\n      }\r\n    }).catch((err) => console.log(err));\r\n  });\r\n\r\n  it(\"should remove mission from db\", async (done) => {\r\n    expect.assertions(2);\r\n    const missionAdded = await missionMethod.add(missionToAdd);\r\n    expect(missionAdded._id).toBeDefined();\r\n    await missionMethod.remove(missionAdded._id);\r\n    return missionMethod.get(missionAdded._id)\r\n        .then(mission => expect(mission).toBeUndefined())\r\n        .catch(() => {\r\n          done();\r\n        });\r\n  });\r\n\r\n  it(\"should update mission from db\", async (done) => {\r\n    expect.assertions(5);\r\n    const missionAdded = await missionMethod.add(missionToAdd);\r\n    expect(missionAdded._id).toBeDefined();\r\n    const newName = \"test2\";\r\n    missionAdded.name = newName;\r\n    const missionReturnFromUpdate = await missionMethod.update(missionAdded);\r\n    expect(missionReturnFromUpdate).toBeDefined();\r\n    expect(missionReturnFromUpdate.name).toEqual(newName);\r\n    const missionUpdated = await missionMethod.get(missionAdded._id);\r\n    expect(missionUpdated).toBeDefined();\r\n    expect(missionUpdated.name).toEqual(newName);\r\n    done();\r\n  });\r\n\r\n  it(\"should update field in mission from db\", async (done) => {\r\n    expect.assertions(5);\r\n    const missionAdded = await missionMethod.add(missionToAdd);\r\n    expect(missionAdded._id).toBeDefined();\r\n    const fieldToUpdate = { name: \"test2\" };\r\n    const missionReturnFromUpdate = await missionMethod.updateField(missionAdded._id, fieldToUpdate);\r\n    expect(missionReturnFromUpdate).toBeDefined();\r\n    expect(missionReturnFromUpdate.name).toEqual(fieldToUpdate.name);\r\n    const missionUpdated = await missionMethod.get(missionAdded._id);\r\n    expect(missionUpdated).toBeDefined();\r\n    expect(missionUpdated.name).toEqual(fieldToUpdate.name);\r\n    done();\r\n  });\r\n\r\n  it(\"should remove mission from db\", (done) => {\r\n    return missionMethod.removeAll().then(() => {\r\n      done();\r\n    }).catch((err) => console.log(err));\r\n  });\r\n\r\n\r\n});\r\n"]}