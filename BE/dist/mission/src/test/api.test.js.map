{"version":3,"file":"api.test.js","sourceRoot":"","sources":["../../../../mission/src/test/api.test.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,iDAAgD;AAEhD,MAAM,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACvC,MAAM,EAAC,GAAG,EAAE,IAAI,EAAC,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACzC,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAErC,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAE7B,IAAI,OAAO,CAAC;IACZ,IAAI,MAAM,CAAC;IAEX,SAAS,CAAC,CAAM,IAAI,EAAE,EAAE;QACtB,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1B,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;IAEnC,CAAC,CAAA,CAAC,CAAC;IAGH,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC5C,OAAO,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;aAC3B,MAAM,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;QACrC,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;aACvB,MAAM,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;IACH,EAAE;IACF,oCAAoC;IACpC,8BAA8B;IAC9B,6BAA6B;IAC7B,2CAA2C;IAC3C,4CAA4C;IAC5C,6BAA6B;IAC7B,kDAAkD;IAClD,eAAe;IACf,2BAA2B;IAC3B,gCAAgC;IAChC,+BAA+B;IAC/B,qBAAqB;IACrB,eAAe;IACf,4BAA4B;IAC5B,MAAM;IAEN,QAAQ,CAAC,CAAO,IAAI,EAAE,EAAE;QACtB,IAAI;YACF,MAAM,mBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACjC,MAAM,EAAC,QAAQ,EAAC,GAAG,QAAQ,CAAC,UAAU,CAAC,WAAW,CAAC;YACnD,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACxC,MAAM,QAAQ,CAAC,UAAU,EAAE,CAAC;YAC5B,wBAAwB;YACxB,gBAAgB;YAChB,gCAAgC;SACjC;QACD,OAAO,CAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAChB;IACH,CAAC,CAAA,CAAC,CAAC;AAGL,CAAC,CAAC,CAAC","sourcesContent":["import { DBManager } from \"../dbModule/connect\";\r\nimport { Mission } from \"../dbModule/schemas/mission.schema\";\r\nconst supertest = require(\"supertest\");\r\nconst {app, stop} = require(\"../server\");\r\nconst mongoose = require(\"mongoose\");\r\n\r\ndescribe(\"publisher api\", () => {\r\n\r\n  let request;\r\n  let server;\r\n\r\n  beforeAll(async(done) => {\r\n    server = app.listen(done);\r\n    request = supertest.agent(server)\r\n\r\n  });\r\n\r\n\r\n  it(\"get publisher should return 200 OK\", () => {\r\n    return request.get(\"/publisher\")\r\n        .expect(200);\r\n  });\r\n  it(\"get test2 should return 404\", () => {\r\n    return request.get(\"/test2\")\r\n        .expect(404);\r\n  });\r\n  //\r\n  // it(\"add entity\", async(done) => {\r\n  //   return await request(app)\r\n  //       .post(\"/addMission\")\r\n  //       .set(\"Accept\", \"application/json\")\r\n  //       .send({mission: { name: \"test3\" }})\r\n  //       // .expect((res => {\r\n  //       //   assert(res.body, { name: 'test3' });\r\n  //       // }))\r\n  //       .then (res => res)\r\n  //       // .end((err, res) => {\r\n  //       //   console.log(err);\r\n  //       //   done();\r\n  //       // });\r\n  //       .catch(err => err);\r\n  // });\r\n\r\n  afterAll(async (done) => {\r\n    try {\r\n      await DBManager.disconnect(done);\r\n      const {missions} = mongoose.connection.collections;\r\n      await missions.conn.doClose(true, done);\r\n      await mongoose.disconnect();\r\n      // await server.close();\r\n      // await stop();\r\n      // await request.server.close();\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  });\r\n\r\n\r\n});\r\n\r\n"]}