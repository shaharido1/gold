{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../configServer/src/server.ts"],"names":[],"mappings":";;AAAA,yDAAmD;AACnD,6DAA6D;AAC7D,6DAA6D;AAC7D,yDAA2D;AAE3D,qCAA8B;AAC9B,+BAAwB;AACxB,6CAAqC;AAGrC,MAAM,GAAG,GAAG,iBAAO,EAAE,CAAC;AACtB,MAAM,IAAI,GAAG,wBAAS,CAAC,iBAAiB,CAAC;AAEzC,GAAG,CAAC,GAAG,CAAC,cAAI,EAAE,CAAC,CAAC;AAChB,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACnD,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,GAAG,EAAE,GAAG;IACjC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACxB,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,GAAG,EAAE,GAAG;IACtC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC5B,IAAK,GAAG,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU;QAC9B,GAAG,CAAC,IAAI,CAAC,0BAAI,CAAC,CAAC;SACd,IAAK,GAAG,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU;QACrC,GAAG,CAAC,IAAI,CAAC,0BAAI,CAAC,CAAC;SACZ,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,KAAK,QAAQ;QAClC,GAAG,CAAC,IAAI,CAAC,wBAAI,CAAC,CAAC;;QAEf,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;AACnB,CAAC,CAAC,CAAC;AAGH,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,6BAA6B,IAAI,EAAE,CAAC,CAAC,CAAC","sourcesContent":["import { appConfig } from '../config/configServer';\r\nimport { appConfig as prod } from '../config/configProducer';\r\nimport { appConfig as cons } from '../config/configConsumer';\r\nimport { appConfig as enri } from '../config/configEnrich';\r\n\r\nimport express from \"express\";\r\nimport cors from \"cors\";\r\nimport bodyParser from \"body-parser\";\r\n\r\n\r\nconst app = express();\r\nconst port = appConfig.config_rabbitPort;\r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.get('/test', function (req, res) {\r\n  console.log('WORKS!!!');\r\n  res.send('WORKS!!!');\r\n});\r\n\r\napp.get('/getConfig', function (req, res) {\r\n  console.log(req.query.type);\r\n  if ( req.query.type === 'producer')\r\n      res.json(prod);\r\n  else if ( req.query.type === 'consumer')\r\n    res.json(cons);\r\n  else if (req.query.type === 'enrich')\r\n    res.json(enri);\r\n  else\r\n    res.send(\"404\")\r\n});\r\n\r\n\r\napp.listen(port, () => console.log(`Service Listening on Port ${port}`));"]}