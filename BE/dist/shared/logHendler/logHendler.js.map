{"version":3,"file":"logHendler.js","sourceRoot":"","sources":["../../../shared/logHendler/logHendler.ts"],"names":[],"mappings":";;AAAA,iCAAiC;AAEjC,uDAA+D;AAE/D,IAAY,IAEX;AAFD,WAAY,IAAI;IACd,uBAAe,CAAA;AACjB,CAAC,EAFW,IAAI,GAAJ,YAAI,KAAJ,YAAI,QAEf;AAED;IAIE,YAAY,KAAsB;QAChC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC;IAEO,IAAI,CAAC,KAAK;QAChB,MAAM,WAAW,GAAG;YAClB,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,OAAO,EAAE,CAAC;oBACR,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,WAAW;iBAC/B,CAAC;SACH,CAAC;QACF,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IAE9C,CAAC;IAEM,WAAW,CAAC,KAAa,EAAE,GAAW;QAC3C,QAAQ,KAAK,EAAE;YACb,KAAK,qBAAM,CAAC,KAAK;gBACf,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM;YACR,KAAK,qBAAM,CAAC,KAAK;gBACf,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM;YACR,KAAK,qBAAM,CAAC,IAAI;gBACd,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACnB,MAAM;YACR,KAAK,qBAAM,CAAC,KAAK;gBACf,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM;YACR,KAAK,qBAAM,CAAC,KAAK;gBACf,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM;YACR;gBACE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACtB;IAEH,CAAC;CAEF;AA1CD,sCA0CC","sourcesContent":["import * as bunyan from 'bunyan';\r\nimport { LoggerOptions, LogLevelString } from 'bunyan';\r\nimport { levels, MyLoggerOptions } from './modle/logerOptions';\r\n\r\nexport enum leve {\r\n  TRACE = 'trace'\r\n}\r\n\r\nexport class LoggerHandler {\r\n\r\n  log;\r\n\r\n  constructor(setup: MyLoggerOptions) {\r\n    this.init(setup);\r\n  }\r\n\r\n  private init(setup) {\r\n    const loggerSetup = {\r\n      name: setup.name,\r\n      streams: [{\r\n        path: `${setup.path}/play.log`\r\n      }]\r\n    };\r\n    this.log = bunyan.createLogger(loggerSetup);\r\n\r\n  }\r\n\r\n  public loggerWrite(level: levels, msg: string) {\r\n    switch (level) {\r\n      case levels.TRACE:\r\n        this.log.trace(msg);\r\n        break;\r\n      case levels.DEBUG:\r\n        this.log.debug(msg);\r\n        break;\r\n      case levels.WARN:\r\n        this.log.warn(msg);\r\n        break;\r\n      case levels.ERROR:\r\n        this.log.error(msg);\r\n        break;\r\n      case levels.FATAL:\r\n        this.log.fatal(msg);\r\n        break;\r\n      default:\r\n        this.log.info(msg);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n"]}