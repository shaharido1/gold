{"version":3,"file":"goldServer.js","sourceRoot":"","sources":["../../../../shared/src/goldServer/goldServer.ts"],"names":[],"mappings":";;AAEA,gEAA6D;AAG7D;IAKE,YAAY,GAAG,EAAE,IAAc;QAC7B,IAAI,CAAC,MAAM,GAAmB,IAAI,6BAAa,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC;QACjE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAGD,YAAY;QACV,4BAA4B;QAC5B,6DAA6D;QAC7D,uDAAuD;QACvD,6EAA6E;IAC/E,CAAC;CAGF;AAnBD,gCAmBC","sourcesContent":["import { ProducerConfig } from '../../../mock/mock_prod/src/model/producer.config.interface';\nimport { LoggerHandler } from '../logHandler/logHendler';\nimport { ConfigHandler } from '../configSetup/configHandler';\n\n\nexport abstract class GoldServer {\n  protected config;\n  protected loggerHandler: LoggerHandler;\n\n\n  constructor(str, test?: boolean) {\n    this.config = <ProducerConfig>new ConfigHandler(str).finalConfig;\n    this.logesHandler();\n  }\n\n\n  logesHandler() {\n    // todo finish loggerHandler\n    // const loggerSetup = { name: 'producer', path: __dirname };\n    // this.loggerHandler = new LoggerHandler(loggerSetup);\n    // this.loggerHandler.loggerWrite(levels.TRACE, 'producer starting to work');\n  }\n\n\n}\n"]}