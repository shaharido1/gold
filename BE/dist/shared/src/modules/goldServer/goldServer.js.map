{"version":3,"file":"goldServer.js","sourceRoot":"","sources":["../../../../../shared/src/modules/goldServer/goldServer.ts"],"names":[],"mappings":";;AACA,gEAA6D;AAG7D;IAKE,YAAsB,GAAG,EAAE,IAAc;QACvC,IAAI,CAAC,MAAM,GAAG,IAAI,6BAAa,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC;QACjD,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAGD,YAAY;QACV,4BAA4B;QAC5B,6DAA6D;QAC7D,oDAAoD;QACpD,6EAA6E;IAC/E,CAAC;CAGF;AAnBD,gCAmBC","sourcesContent":["import { LogService } from '../logHandler/logHendler';\nimport { ConfigHandler } from '../configSetup/configHandler';\n\n\nexport abstract class GoldServer {\n  protected config;\n  public logService: LogService;\n\n\n  protected constructor(str, test?: boolean) {\n    this.config = new ConfigHandler(str).finalConfig;\n    this.logesHandler();\n  }\n\n\n  logesHandler() {\n    // todo finish loggerHandler\n    // const loggerSetup = { name: 'producer', path: __dirname };\n    // this.loggerHandler = new LogService(loggerSetup);\n    // this.loggerHandler.loggerWrite(levels.TRACE, 'producer starting to work');\n  }\n\n\n}\n"]}