{"version":3,"file":"logHendler.js","sourceRoot":"","sources":["../../../../../shared/src/modules/logHandler/logHendler.ts"],"names":[],"mappings":";;AAAA,iCAAiC;AAEjC,uDAA+D;AAE/D,+CAA+C;AAE/C;IAKE,YAAY,KAAsB;QAChC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC;IAEO,IAAI,CAAC,KAAK;QAChB,MAAM,WAAW,GAAG;YAClB,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,kBAAkB;YAClB,OAAO,EAAE,CAAC;oBACR,IAAI,EAAE,eAAe;oBACrB,KAAK,EAAE,CAAC;oBACR,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,YAAY;iBAChC;aACA;SACF,CAAC;QACF,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAC5C,MAAM,MAAM,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC;YACtC,IAAI,EAAE,gBAAgB;YACtB,GAAG,EAAE;gBACH;oBACE,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,YAAY;oBAC/B,KAAK,EAAE,OAAO;iBACf;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAEM,WAAW,CAAC,KAAa,EAAE,GAAW;QAC3C,OAAO,CAAC,GAAG,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC;QAC/B,QAAQ,KAAK,EAAE;YACb,KAAK,qBAAM,CAAC,KAAK;gBACf,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM;YACR,KAAK,qBAAM,CAAC,KAAK;gBACf,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM;YACR,KAAK,qBAAM,CAAC,IAAI;gBACd,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACnB,MAAM;YACR,KAAK,qBAAM,CAAC,KAAK;gBACf,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM;YACR,KAAK,qBAAM,CAAC,KAAK;gBACf,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM;YACR;gBACE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACtB;IACH,CAAC;CAEF;AAxDD,sCAwDC","sourcesContent":["import * as bunyan from 'bunyan';\r\nimport { LoggerOptions, LogLevelString } from 'bunyan';\r\nimport { levels, MyLoggerOptions } from './modle/logerOptions';\r\nimport { LogToBunyan } from './log_to_bunyan';\r\nimport * as elasticsearch from 'elasticsearch';\r\n\r\nexport class LoggerHandler {\r\n\r\n  log: any;\r\n  sendToElastic;\r\n\r\n  constructor(setup: MyLoggerOptions) {\r\n    this.init(setup);\r\n  }\r\n\r\n  private init(setup) {\r\n    const loggerSetup = {\r\n      name: setup.name,\r\n      // level: \"trace\",\r\n      streams: [{\r\n        type: 'rotating-file',\r\n        level: 0,\r\n        path: `${setup.path}/logs.json`\r\n      }\r\n      ]\r\n    };\r\n    this.log = bunyan.createLogger(loggerSetup);\r\n    const client = new elasticsearch.Client({\r\n      host: 'localhost:9200',\r\n      log: [\r\n        {\r\n          path: `${setup.path}/logs.json`,\r\n          level: 'trace'\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  public loggerWrite(level: levels, msg: string) {\r\n    console.log(`level: ${level}`);\r\n    switch (level) {\r\n      case levels.TRACE:\r\n        console.log('TRACE');\r\n        this.log.trace(msg);\r\n        break;\r\n      case levels.DEBUG:\r\n        this.log.debug(msg);\r\n        break;\r\n      case levels.WARN:\r\n        this.log.warn(msg);\r\n        break;\r\n      case levels.ERROR:\r\n        this.log.error(msg);\r\n        break;\r\n      case levels.FATAL:\r\n        this.log.fatal(msg);\r\n        break;\r\n      default:\r\n        this.log.info(msg);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n"]}