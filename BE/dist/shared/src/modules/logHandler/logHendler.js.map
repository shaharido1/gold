{"version":3,"file":"logHendler.js","sourceRoot":"","sources":["../../../../../shared/src/modules/logHandler/logHendler.ts"],"names":[],"mappings":";;AAAA,iCAAiC;AAEjC,uDAA+D;AAE/D,+CAA+C;AAE/C;IAKE,YAAY,KAAsB;QAHlC,QAAG,GAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrC,UAAK,GAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAGrC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC;IAEO,IAAI,CAAC,KAAK;QAChB,MAAM,WAAW,GAAG;YAClB,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,kBAAkB;YAClB,OAAO,EAAE,CAAC;oBACR,IAAI,EAAE,eAAe;oBACrB,KAAK,EAAE,CAAC;oBACR,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,YAAY;iBAChC;aACA;SACF,CAAC;QACF,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAC5C,MAAM,MAAM,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC;YACtC,IAAI,EAAE,gBAAgB;YACtB,GAAG,EAAE;gBACH;oBACE,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,YAAY;oBAC/B,KAAK,EAAE,OAAO;iBACf;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAEM,WAAW,CAAC,KAAa,EAAE,GAAW;QAC3C,OAAO,CAAC,GAAG,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC;QAC/B,QAAQ,KAAK,EAAE;YACb,KAAK,qBAAM,CAAC,KAAK;gBACf,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM;YACR,KAAK,qBAAM,CAAC,KAAK;gBACf,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM;YACR,KAAK,qBAAM,CAAC,IAAI;gBACd,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACnB,MAAM;YACR,KAAK,qBAAM,CAAC,KAAK;gBACf,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM;YACR,KAAK,qBAAM,CAAC,KAAK;gBACf,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM;YACR;gBACE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACtB;IACH,CAAC;CAEF;AAxDD,gCAwDC","sourcesContent":["import * as bunyan from 'bunyan';\nimport { LoggerOptions, LogLevelString } from 'bunyan';\nimport { levels, MyLoggerOptions } from './modle/logerOptions';\nimport { LogToBunyan } from './log_to_bunyan';\nimport * as elasticsearch from 'elasticsearch';\n\nexport class LogService {\n\n  log: any = (log) => console.log(log);\n  error: any = (err) => console.log(err);\n\n  constructor(setup: MyLoggerOptions) {\n    this.init(setup);\n  }\n\n  private init(setup) {\n    const loggerSetup = {\n      name: setup.name,\n      // level: \"trace\",\n      streams: [{\n        type: 'rotating-file',\n        level: 0,\n        path: `${setup.path}/logs.json`\n      }\n      ]\n    };\n    this.log = bunyan.createLogger(loggerSetup);\n    const client = new elasticsearch.Client({\n      host: 'localhost:9200',\n      log: [\n        {\n          path: `${setup.path}/logs.json`,\n          level: 'trace'\n        }\n      ]\n    });\n  }\n\n  public loggerWrite(level: levels, msg: string) {\n    console.log(`level: ${level}`);\n    switch (level) {\n      case levels.TRACE:\n        console.log('TRACE');\n        this.log.trace(msg);\n        break;\n      case levels.DEBUG:\n        this.log.debug(msg);\n        break;\n      case levels.WARN:\n        this.log.warn(msg);\n        break;\n      case levels.ERROR:\n        this.log.error(msg);\n        break;\n      case levels.FATAL:\n        this.log.fatal(msg);\n        break;\n      default:\n        this.log.info(msg);\n    }\n  }\n\n}\n\n\n"]}