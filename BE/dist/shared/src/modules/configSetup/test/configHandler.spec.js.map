{"version":3,"file":"configHandler.spec.js","sourceRoot":"","sources":["../../../../../../shared/src/modules/configSetup/test/configHandler.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { ConfigHandler, EnvironementMode } from '../configHandler';\r\nimport { configFileLocation } from './configPathTest';\r\nimport { expect } from 'chai';\r\nimport 'mocha';\r\n\r\n\r\ndescribe('Testing config handler', () => {\r\n  enum settings {\r\n    object = 'object',\r\n    Environment = 'config_env',\r\n    CustomPath = './validateMockData.custom.json'\r\n  }\r\n\r\n  const testResults = {\r\n    dev: { 'a': { '1': 'a1', '2': 'a2' }, 'b': 'B' },\r\n    test: { 'a': 'A', 'b': 'B', 'c': 'C' },\r\n    prod: { 'a': { '1': 'a.1', '2': 'a.2', '3': { '1': 'a.3.1', '2': 'a.3.2' } }, 'b': 'B' },\r\n    custom: { 'o': 'O', 'h': 'H', 'a': 'A', 'd': 'D' }\r\n  };\r\n\r\n  it('config handler - only file', (done) => {\r\n    process.env[settings.Environment] = undefined;\r\n    const configHandler = new ConfigHandler(configFileLocation);\r\n    expect(configHandler.finalConfig).to.be.a(settings.object);\r\n    expect(configHandler.finalConfig).to.deep.equal(testResults.dev);\r\n    done();\r\n  });\r\n\r\n  it('Test the object in test environment', (done) => {\r\n    process.env[settings.Environment] = EnvironementMode.test;\r\n    const configHandler = new ConfigHandler(configFileLocation);\r\n    expect(configHandler.environmentMode).to.equal(EnvironementMode.test);\r\n    expect(configHandler.finalConfig).to.be.a(settings.object);\r\n    expect(configHandler.finalConfig).to.deep.equal(testResults.test);\r\n    done();\r\n  });\r\n\r\n  it('Test the object in development environment', (done => {\r\n    process.env[settings.Environment] = EnvironementMode.dev;\r\n    const configHandler = new ConfigHandler(configFileLocation);\r\n    expect(configHandler.environmentMode).to.equal(EnvironementMode.dev);\r\n    expect(configHandler.finalConfig).to.be.a(settings.object);\r\n    expect(configHandler.finalConfig).to.deep.equal(testResults.dev);\r\n    done();\r\n\r\n  }));\r\n\r\n  it('Test the object in production environment', (done => {\r\n    process.env[settings.Environment] = EnvironementMode.prod;\r\n    const configHandler = new ConfigHandler(configFileLocation);\r\n    expect(configHandler.environmentMode).to.equal(EnvironementMode.prod);\r\n    expect(configHandler.finalConfig).to.be.a(settings.object);\r\n    expect(configHandler.finalConfig).to.deep.equal(testResults.prod);\r\n    done();\r\n  }));\r\n\r\n  it('Test the object in custom ', (done => {\r\n    process.env[settings.Environment] = EnvironementMode.custom;\r\n    process.env['configFileLocation'] = settings.CustomPath;\r\n    const configHandler = new ConfigHandler(configFileLocation);\r\n    expect(configHandler.environmentMode).to.equal(EnvironementMode.custom);\r\n    expect(configHandler.finalConfig).to.be.a(settings.object);\r\n    expect(configHandler.finalConfig).to.deep.equal(testResults.custom);\r\n    done();\r\n  }));\r\n});\r\n"]}