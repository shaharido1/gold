{"version":3,"file":"redisDataParser.js","sourceRoot":"","sources":["../../../../../shared/src/modules/parser/redisDataParser.ts"],"names":[],"mappings":";;AAAA;IAAA;QAEE,qBAAgB,GAAG,EAAE,CAAC;QACtB,uBAAkB,GAAG,EAAE,CAAC;IAmE1B,CAAC;IAjEC,iBAAiB,CAAC,aAAa;QAC7B,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9B,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/B;QACD,mCAAmC;QACnC,kCAAkC;QAClC,sCAAsC;QACtC,yBAAyB;QACzB,iGAAiG;QACjG,MAAM;QACN,WAAW;QACX,wBAAwB;QACxB,MAAM;QACN,qBAAqB;QACrB,MAAM;IACR,CAAC;IAED,YAAY,CAAC,QAAQ;QACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzC,CAAC;IAGM,aAAa,CAAC,GAAG;QACtB,MAAM,gBAAgB,GAAG,EAAE,CAAC;QAC5B,uBAAuB;QACvB,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACnB,uBAAuB;YACvB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACjB,IAAI,CAAC,CAAC,aAAa,CAAC,QAAQ,KAAK,SAAS,EAAE;oBAE1C,IAAI,OAAO,CAAC,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;wBAChD,MAAM,EAAE,GAAG,EAAE,CAAC;wBACd,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;4BACxC,EAAE,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACzB,CAAC,CAAC,CAAC;wBACH,MAAM,SAAS,GAAG,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;wBAC5D,gBAAgB,CAAE,SAAS,CAAC,GAAG,EAAE,CAAC;qBACnC;yBACI;wBACH,yCAAyC;wBACzC,MAAM,GAAG,GAAG,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;wBACtD,gBAAgB,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;qBAErC;iBACF;qBACI;oBACH,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE;wBAClB,MAAM,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;wBACjD,gBAAgB,CAAE,GAAG,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC;oBAEzC,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAChC,CAAC;IAED,YAAY,CAAC,KAAe;QAC1B,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;YACtC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAtED,0CAsEC","sourcesContent":["export class RedisDataParser {\n\n  objectCreateKeys = [];\n  objectCreateValues = [];\n\n  argsToResolveList(argsToResolve) {\n    console.log(argsToResolve.length);\n    if (argsToResolve.length === 2) {\n      console.log(argsToResolve[0]);\n      console.log(argsToResolve[1]);\n    }\n    // argsToResolve.forEach((key) => {\n    //   if (typeof key == 'string') {\n    //     const x = key.split('_').pop();\n    //     // console.log(x);\n    //     isNaN(parseInt(x)) ? this.objectCreateKeys.push(x) : this.objectCreateKeys.push('M_' + x);\n    //   }\n    //   else {\n    //     console.log(key);\n    //   }\n    // console.log('\\n');\n    // });\n  }\n\n  responseList(response) {\n    console.log(response);\n    this.objectCreateValues.push(response);\n  }\n\n\n  public missionParser(arr) {\n    const newMissionAnswer = {};\n    // console.log(...arr);\n    arr.forEach(answer => {\n      // console.log(answer);\n      answer.forEach(t => {\n        if (t.argsToResolve.redisKey !== undefined) {\n\n          if (typeof t.argsToResolve.subField === 'object') {\n            const st = {};\n            t.argsToResolve.subField.forEach((f, i) => {\n              st [f] = t.response[i];\n            });\n            const staticKey = t.argsToResolve.redisKey.split('_').pop();\n            newMissionAnswer [staticKey] = st;\n          }\n          else {\n            // console.log(t.argsToResolve.redisKey);\n            const key = t.argsToResolve.redisKey.split('_').pop();\n            newMissionAnswer [key] = t.response;\n\n          }\n        }\n        else {\n          answer.forEach((tt) => {\n              const key = tt.argsToResolve[0].split('_').pop();\n              newMissionAnswer [key] = tt.response;\n\n          });\n        }\n      });\n    });\n    console.log(newMissionAnswer);\n  }\n\n  filterDouble(array: string[]) {\n    return array.filter((item, pos, self) => {\n      return self.indexOf(item) == pos;\n    });\n  }\n}"]}