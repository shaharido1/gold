{"version":3,"file":"measeuerTime.js","sourceRoot":"","sources":["../../../../shared/src/measureTime/measeuerTime.ts"],"names":[],"mappings":";;AAEA;IAIS,WAAW,CAAC,OAAe;QAChC,OAAO;YACL,OAAO;YACP,KAAK,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;SAC5B,CAAC;IACJ,CAAC;IAEM,eAAe,CAAC,GAAG,EAAE,KAAK,EAAE,SAAoB,EAAE,MAAM;QAC7D,MAAM,OAAO,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC;QACtC,SAAS,CAAC,cAAc,EAAE,CAAC;QAC3B,SAAS,CAAC,OAAO,IAAI,OAAO,CAAC;QAC7B,SAAS,CAAC,SAAS,IAAI,OAAO,CAAC;QAE/B,IAAI,SAAS,CAAC,cAAc,GAAG,MAAM,CAAC,0BAA0B,IAAI,CAAC,EAAE;YAErE,SAAS,CAAC,SAAS,IAAI,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,0BAA0B,CAAC;YAC/E,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;YAC9D,OAAO,CAAC,GAAG,CAAC,gCAAgC,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,0BAA0B,EAAE,CAAC,CAAC;YACvG,OAAO,CAAC,GAAG,CAAC,YAAY,SAAS,CAAC,cAAc,mBAAmB,CAAC,CAAC;YACrE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YAC/E,OAAO,CAAC,GAAG,CAAC,oBAAoB,SAAS,CAAC,cAAc,GAAG,MAAM,CAAC,kBAAmB,EAAE,CAAC,CAAC;YACzF,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;YAC9D,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;SAGzB;IACH,CAAC;CACF;AA/BD,kCA+BC","sourcesContent":["import { TimeSetup } from './TimeSetup';\r\n\r\nexport class MeasureTime {\r\n\r\n  timeSetup: TimeSetup;\r\n\r\n  public timeWrapper(message: object) {\r\n    return {\r\n      message,\r\n      start: new Date().getTime()\r\n    };\r\n  }\r\n\r\n  public showMeasureTime(end, start, timeSetup: TimeSetup, config): void {\r\n    const timeSec = (end - start) * 0.001;\r\n    timeSetup.numberOfRounds++;\r\n    timeSetup.avgTime += timeSec;\r\n    timeSetup.roundTime += timeSec;\r\n\r\n    if (timeSetup.numberOfRounds % config.config_totalNumberOfRounds == 0) {\r\n\r\n      timeSetup.totalTime += timeSetup.roundTime / config.config_totalNumberOfRounds;\r\n      console.log(`\\n********************************************`);\r\n      console.log(`Average time for this round: ${timeSetup.roundTime / config.config_totalNumberOfRounds}`);\r\n      console.log(`Finished ${timeSetup.numberOfRounds} number of rounds`);\r\n      console.log(`avg time: ${(timeSetup.avgTime / timeSetup.numberOfRounds)} sec`);\r\n      console.log(`Total entities : ${timeSetup.numberOfRounds * config.config_batchNumber }`);\r\n      console.log(`********************************************\\n`);\r\n      timeSetup.roundTime = 0;\r\n\r\n\r\n    }\r\n  }\r\n}\r\n"]}