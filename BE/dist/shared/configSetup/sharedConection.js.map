{"version":3,"file":"sharedConection.js","sourceRoot":"","sources":["../../../shared/configSetup/sharedConection.ts"],"names":[],"mappings":";;AAAA,0CAA0C;AAC1C,mCAAmC;AAItB,QAAA,SAAS,GAAG;IACvB,WAAW,EAAE,MAAM;IACnB,WAAW,EAAE,WAAW;CACzB,CAAC;AAGF;IAME;QACE,oCAAoC;QACpC,sCAAsC;QACtC,0CAA0C;IAC5C,CAAC;IAGM,cAAc;QACnB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,CAAC;YACrB,MAAM,IAAI,GAAG,iBAAS,CAAC,WAAW,CAAC;YACnC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;gBACzB,OAAO,OAAO,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,IAAI;QACpB,6CAA6C;IAC/C,CAAC;IAED,YAAY;QACV,4CAA4C;QAC5C,sDAAsD;QACtD,qCAAqC;QACrC,qBAAqB;QACrB,MAAM;IACR,CAAC;CAEF;AArCD,wCAqCC","sourcesContent":["import * as bodyParser from 'body-parser';\nimport * as express from 'express';\nimport { ConfigHandler } from './configHandler';\nimport { Application } from 'express-serve-static-core';\n\nexport const appConfig = {\n  config_Port: '5000',\n  config_Host: 'localhost'\n};\n\n\nexport class SharedServices {\n  // logService: LogHandler;\n  configHandler: ConfigHandler;\n  // testHandler: testHandler;\n  app: Application;\n\n  constructor() {\n    // this.logService = new LogHandler;\n    // this.testHandler = new testHandler;\n    // this.configHandler = new ConfigHandler;\n  }\n\n\n  public initConnection() {\n    return new Promise((resolve, reject) => {\n      this.app = express();\n      const port = appConfig.config_Port;\n      this.app.use(bodyParser.json());\n      this.app.use(bodyParser.urlencoded({ extended: true }));\n      this.app.listen(port, () => {\n        return resolve();\n      });\n    });\n  }\n\n  initConfigHandler(path) {\n    // return this.configHandler.getConfig(path);\n  }\n\n  initHandlers() {\n    // return new Promise((resolve, reject) => {\n    //   this.configHandler = new ConfigHandler(this.app);\n    //   this.configHandler.fetchConfig()\n    //   return resolve()\n    // });\n  }\n\n}\n\n\n\n\n\n"]}