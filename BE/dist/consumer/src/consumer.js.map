{"version":3,"file":"consumer.js","sourceRoot":"","sources":["../../../consumer/src/consumer.ts"],"names":[],"mappings":";;AACA,uDAA2D;AAC3D,wDAA4D;AAC5D,0EAAuE;AAEvE,wEAAoE;AACpE,+DAA+D;AAG/D;IAgBE;QATQ,cAAS,GAAc;YAC7B,OAAO,EAAE,CAAC;YACV,cAAc,EAAE,CAAC;YACjB,SAAS,EAAE,CAAC;YACZ,SAAS,EAAE,CAAC;SACb,CAAC;QACM,gBAAW,GAAgB,IAAI,0BAAW,EAAE,CAAC;QAInD,IAAI,CAAC,MAAM,GAAmB,IAAI,6BAAa,CAAC,oCAAkB,CAAC,CAAC,WAAW,CAAC;QAChF,IAAI,CAAC,aAAa,GAAG,IAAI,sBAAa,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACjE,IAAI,CAAC,YAAY,GAAG,IAAI,wBAAc,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAChE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAGD,IAAI;QACF,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;YACpG,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YAC5C,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC;IAED,OAAO,CAAC,IAAI;QACV,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACvC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACxC,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,WAAW,EAAE;YACjD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACrB;aACI;YACH,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,EAAE,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACjG,MAAM,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACzE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;YACvG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;SACpF;IACH,CAAC;CACF;AA7CD,4BA6CC","sourcesContent":["import { ConsumerConfig } from './model/consumer.config.interface';\nimport { RabbitAdapter } from '../../shared/rabbit/rabbit';\nimport { RedisMqAdapter } from '../../shared/redis/redisMQ';\nimport { ConfigHandler } from '../../shared/configSetup/configHandler';\nimport { TimeSetup } from '../../shared/measureTime/TimeSetup';\nimport { MeasureTime } from '../../shared/measureTime/measeuerTime';\nimport { ConfigFileLocation } from '../config/config.filePath';\n\n\nexport class Consumer {\n\n  private config: ConsumerConfig;\n\n  private rabbitAdapter: RabbitAdapter;\n  private redisAdapter: RedisMqAdapter;\n  private rabbitStartTime: number;\n  private timeSetup: TimeSetup = {\n    avgTime: 0,\n    numberOfRounds: 0,\n    roundTime: 0,\n    totalTime: 0\n  };\n  private measureTime: MeasureTime = new MeasureTime();\n\n\n  constructor() {\n    this.config = <ConsumerConfig>new ConfigHandler(ConfigFileLocation).finalConfig;\n    this.rabbitAdapter = new RabbitAdapter(this.config.rabbitConfig);\n    this.redisAdapter = new RedisMqAdapter(this.config.redisConfig);\n    this.init();\n  }\n\n\n  init() {\n    Promise.all([this.redisAdapter.initRMSQ(), this.rabbitAdapter.initConnection()]).then((connections) => {\n      this.rabbitStartTime = new Date().getTime();\n      this.rabbitAdapter.consumeFromQueue().then(this.doStuff.bind(this));\n    }).catch(err => err);\n  }\n\n  doStuff(data) {\n    const rabbitEnd = new Date().getTime();\n    const rawData = data.content.toString();\n    const parsedData = JSON.parse(rawData);\n    if (this.rabbitStartTime > parsedData.rabbitStart) {\n      console.log('pass');\n    }\n    else {\n      this.measureTime.showMeasureTime(rabbitEnd, parsedData.rabbitStart, this.timeSetup, this.config);\n      const messageWithTime = this.measureTime.timeWrapper(parsedData.message);\n      this.redisAdapter.sendMassage(messageWithTime, this.timeSetup, this.config.config_totalNumberOfRounds);\n      this.redisAdapter.sendToQueue(parsedData.message, this.config.config_keyId).then();\n    }\n  }\n}"]}