{"version":3,"file":"consumer.js","sourceRoot":"","sources":["../../../consumer/src/consumer.ts"],"names":[],"mappings":"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","sourcesContent":["import { ConsumerConfig } from './model/consumer.config.interface';\nimport { RedisMqAdapter } from '../../shared/redis/redisMQ';\nimport { ConfigHandler } from '../../shared/configSetup/configHandler';\nimport { TimeSetup } from '../../shared/measureTime/TimeSetup';\nimport { MeasureTime } from '../../shared/measureTime/measeuerTime';\nimport { configFileLocation } from '../config/config.filePath';\nimport { Message } from 'amqplib';\nimport { RabbitConsumer } from '../../shared/rabbit/rabbitConsumer';\n\n\nexport class Consumer {\n\n  private config: ConsumerConfig;\n\n  private rabbitConsumer: RabbitConsumer;\n  private redisAdapter: RedisMqAdapter;\n  private rabbitStartTime: number;\n  private timeSetup: TimeSetup = {\n    avgTime: 0,\n    numberOfRounds: 0,\n    roundTime: 0,\n    totalTime: 0\n  };\n  private measureTime: MeasureTime = new MeasureTime();\n  subscriptions = [];\n\n  constructor() {\n    this.config = <ConsumerConfig>new ConfigHandler(configFileLocation).finalConfig;\n    this.rabbitConsumer = new RabbitConsumer(this.config.rabbitConfig);\n    this.redisAdapter = new RedisMqAdapter(this.config.redisConfig);\n    this.init();\n  }\n\n\n  async init() {\n    Promise.all([this.redisAdapter.initRMSQ(), this.rabbitConsumer.getChannel()]).then(() => {\n      this.rabbitStartTime = new Date().getTime();\n      const subscription = this.rabbitConsumer.clientConsume()\n          .subscribe(message => {\n            this.doStuff(message)\n                .then(() => {\n                  try {\n                    console.log('ack');\n                    this.rabbitConsumer.ack(message);\n                  }\n                  catch (e) {\n                    console.log('failed ack');\n                    console.log(e);\n                  }\n                })\n                .catch((e) => {\n                  console.log(e);\n                  console.log('canceling..');\n                  this.rabbitConsumer.cancel(message);\n                });\n          }, err => console.log(err));\n      this.subscriptions.push(subscription);\n    }).catch(err => Error(err));\n  }\n\n\n  doStuff(msg): Promise<Message> {\n    return new Promise((resolve, reject) => {\n    //   return resolve();\n    // })\n      const rabbitEnd = new Date().getTime();\n      const rawData = msg.content.toString();\n      const parsedData = JSON.parse(rawData);\n      if (this.rabbitStartTime > parsedData.rabbitStart) {\n        console.log('pass');\n        return resolve(msg);\n      }\n      else {\n        this.measureTime.showMeasureTime(rabbitEnd, parsedData.rabbitStart, this.timeSetup, this.config);\n        const messageWithTime = this.measureTime.timeWrapper(parsedData.message);\n        const timeToWightToRedis = new Date().getTime();\n        console.log(messageWithTime);\n        this.redisAdapter.sendMassage(messageWithTime)\n            .then(() => {\n              if (this.timeSetup.numberOfRounds % this.config.config_totalNumberOfRounds == 0) {\n                console.log(`Time to write to redis: ${(new Date().getTime() - timeToWightToRedis) * 0.001} sec\\n`);\n              }\n              return resolve(msg);\n            }).catch(err => {\n          console.log(err);\n          // todo error log handling etc....\n          return reject(msg);\n        });\n      }\n    });\n  }\n\n\n}"]}