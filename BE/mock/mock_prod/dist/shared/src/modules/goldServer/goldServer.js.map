{"version":3,"file":"goldServer.js","sourceRoot":"","sources":["../../../../../../../shared/src/modules/goldServer/goldServer.ts"],"names":[],"mappings":";;AACA,gEAA6D;AAG7D;IAKE,YAAsB,GAAG,EAAE,IAAc;QACvC,IAAI,CAAC,MAAM,GAAG,IAAI,6BAAa,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC;QACjD,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAGD,YAAY;QACV,4BAA4B;QAC5B,6DAA6D;QAC7D,uDAAuD;QACvD,6EAA6E;IAC/E,CAAC;CAGF;AAnBD,gCAmBC","sourcesContent":["import { LoggerHandler } from '../logHandler/logHendler';\r\nimport { ConfigHandler } from '../configSetup/configHandler';\r\n\r\n\r\nexport abstract class GoldServer {\r\n  protected config;\r\n  protected loggerHandler: LoggerHandler;\r\n\r\n\r\n  protected constructor(str, test?: boolean) {\r\n    this.config = new ConfigHandler(str).finalConfig;\r\n    this.logesHandler();\r\n  }\r\n\r\n\r\n  logesHandler() {\r\n    // todo finish loggerHandler\r\n    // const loggerSetup = { name: 'producer', path: __dirname };\r\n    // this.loggerHandler = new LoggerHandler(loggerSetup);\r\n    // this.loggerHandler.loggerWrite(levels.TRACE, 'producer starting to work');\r\n  }\r\n\r\n\r\n}\r\n"]}